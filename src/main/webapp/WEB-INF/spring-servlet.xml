<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--扫描注解包  <context:annotation-config/>可以不要 -->
    <context:component-scan base-package="com.destiny.work"/>

    <!--MVC驱动 开启注解 controller 同时 配置了都json的解析
        可以代替下面两个（RequestMappingHandlerMapping、RequestMappingHandlerAdapter）
    -->
    <mvc:annotation-driven>
    <mvc:message-converters register-defaults="true">
        <!-- 配置Fastjson 替换原来的jackson支持 -->
        <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
            <property name="supportedMediaTypes">
                <list>
                    <value>text/html;charset=UTF-8</value>
                    <value>application/json</value>
                </list>
            </property>
            <property name="features">
                <list>

                    <value>QuoteFieldNames</value> <!-- 输出key时是否使用双引号,默认为true -->
                    <value>WriteMapNullValue</value>  <!-- 是否输出值为null的字段,默认为false -->

                    <!--
                    <value>DisableCircularReferenceDetect</value>
                    <value>WriteDateUseDateFormat</value>
                    <value>WriteNullStringAsEmpty</value>  字符类型字段如果为null,输出为"",而非null
                    <value>WriteNullNumberAsZero</value>  数值字段如果为null,输出为0,而非null
                    <value>WriteNullBooleanAsFalse</value>  Boolean字段如果为null,输出为false,而非null
                    <value>WriteNullListAsEmpty</value>    List字段如果为null,输出为[],而非null
                    -->

                </list>
            </property>
        </bean>
    </mvc:message-converters>
</mvc:annotation-driven>

    <!--
    处理器映射器
    针对注解配置@RequestMapping :
    RequestMappingHandlerMapping 替代了 DefaultAnnotationHandlerMapping-->
    <!--  <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>
  -->
    <!--
    处理器适配器
    RequestMappingHandlerAdapter :
            和上面的RequestMappingHandlerMapping配对使用-->
    <!--    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
            <property name="messageConverters">
                <list>
                    <ref bean="stringConverter"/>

                    <ref bean="jsonConverter"/>
                </list>
            </property>
        </bean>-->

    <!--视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <mvc:resources mapping="/javascript/**" location="/statics/js/"/>
    <mvc:resources mapping="/styles/**" location="/statics/css/"/>
    <mvc:resources mapping="/images/**" location="/statics/images/"/>
    <!--处理静态资源-->
    <!--servlet在找页面时，走的是dispatcherServlet路线。找不到的时候会报404
     加上这个默认的servlet时候，servlet在找不到的时候会去找静态的内容。-->
    <mvc:default-servlet-handler/>

    <!-- 用于将对象转换为 JSON  转换器-->
    <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
    <bean id="stringConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/plain;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <!--    <bean id="jsonConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
            <property name="supportedMediaTypes">
                <list>
                    <value>text/plain;charset=UTF-8</value>
                </list>
            </property>
        </bean>-->

    <!--全局异常处理器 实现HandlerExceptionResolver接口就是全局异常处理器-->
    <bean class="com.destiny.work.exception.LoginExceptionResolver"/>

    <!--文件上传-->
    <!--在jsp页面中的form中要配置解析器 enctype="multipart/form-data" -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--设置上传文件大小为5M-->
        <property name="maxUploadSize">
            <value>5242880</value>
        </property>
    </bean>

    <!--拦截器
        拦截器中的方法执行与拦截器的顺序和是否返回true有关
    -->
    <mvc:interceptors>
        <!--登录验证拦截器-->
        <mvc:interceptor>
            <mvc:mapping path="/**"/><!--拦截所有包括子地址-->
            <bean class="com.destiny.work.interceptors.LoginInterceptors"/>
        </mvc:interceptor>
    </mvc:interceptors>
</beans>